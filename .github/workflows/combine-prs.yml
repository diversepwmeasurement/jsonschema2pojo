jobs:
  combine-prs:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: fetch-branch-names
      name: Fetch branch names
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: "const pulls = await github.paginate('GET /repos/:owner/:repo/pulls',\
          \ {\n  owner: context.repo.owner,\n  repo: context.repo.repo\n});\nbranches\
          \ = [];\nprs = [];\nbase_branch = null;\nfor (const pull of pulls) {\n \
          \ const branch = pull['head']['ref'];\n  console.log('Pull for branch: '\
          \ + branch);\n  if (branch.startsWith('${{ github.event.inputs.branchPrefix\
          \ }}')) {\n    console.log('Branch matched: ' + branch);\n    statusOK =\
          \ true;\n    if(${{ github.event.inputs.mustBeGreen }}) {\n      console.log('Checking\
          \ green status: ' + branch);\n      const checkRuns = await github.request('GET\
          \ /repos/{owner}/{repo}/commits/{ref}/check-runs', {\n        owner: context.repo.owner,\n\
          \        repo: context.repo.repo,\n        ref: branch\n      });\n    \
          \  for await (const cr of checkRuns.data.check_runs) {\n        console.log('Validating\
          \ check conclusion: ' + cr.conclusion);\n        if(cr.conclusion != 'success')\
          \ {\n          console.log('Discarding ' + branch + ' with check conclusion\
          \ ' + cr.conclusion);\n          statusOK = false;\n        }\n      }\n\
          \    }\n    console.log('Checking labels: ' + branch);\n    const labels\
          \ = pull['labels'];\n    for(const label of labels) {\n      const labelName\
          \ = label['name'];\n      console.log('Checking label: ' + labelName);\n\
          \      if(labelName == '${{ github.event.inputs.ignoreLabel }}') {\n   \
          \     console.log('Discarding ' + branch + ' with label ' + labelName);\n\
          \        statusOK = false;\n      }\n    }\n    if (statusOK) {\n      console.log('Adding\
          \ branch to array: ' + branch);\n      branches.push(branch);\n      prs.push('#'\
          \ + pull['number'] + ' ' + pull['title']);\n      base_branch = pull['base']['ref'];\n\
          \    }\n  }\n}\n\nif (branches.length == 0) {\n  core.setFailed('No PRs/branches\
          \ matched criteria');\n  return;\n}\n\ncore.setOutput('base-branch', base_branch);\n\
          core.setOutput('prs-string', prs.join('\\n'));\n\ncombined = branches.join('\
          \ ')\nconsole.log('Combined: ' + combined);\nreturn combined\n"
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      env:
        BASE_BRANCH: ${{ steps.fetch-branch-names.outputs.base-branch }}
        BRANCHES_TO_COMBINE: ${{ steps.fetch-branch-names.outputs.result }}
        COMBINE_BRANCH_NAME: ${{ github.event.inputs.combineBranchName }}
      name: Created combined branch
      run: 'echo "$BRANCHES_TO_COMBINE"

        sourcebranches="${BRANCHES_TO_COMBINE%\"}"

        sourcebranches="${sourcebranches#\"}"


        basebranch="${BASE_BRANCH%\"}"

        basebranch="${basebranch#\"}"


        git config pull.rebase false

        git config user.name github-actions

        git config user.email github-actions@github.com


        git branch $COMBINE_BRANCH_NAME $basebranch

        git checkout $COMBINE_BRANCH_NAME

        git pull origin $sourcebranches --no-edit

        git push origin $COMBINE_BRANCH_NAME

        '
    - continue-on-error: true
      env:
        PRS_STRING: ${{ steps.fetch-branch-names.outputs.prs-string }}
      name: Create Combined Pull Request
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: "const prString = process.env.PRS_STRING;\nconst body = 'This PR was\
          \ created by the Combine PRs action by combining the following PRs:\\n'\
          \ + prString;\nawait github.pulls.create({\n  owner: context.repo.owner,\n\
          \  repo: context.repo.repo,\n  title: 'Combined PR',\n  head: '${{ github.event.inputs.combineBranchName\
          \ }}',\n  base: '${{ steps.fetch-branch-names.outputs.base-branch }}',\n\
          \  body: body\n});\n"
name: Combine PRs
on:
  repository_dispatch:
    types: trigger-ga___combine-prs.yml
